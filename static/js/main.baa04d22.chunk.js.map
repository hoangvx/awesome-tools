{"version":3,"sources":["components/layouts/MasterLayout.js","views/ErrorPage.js","components/timer/CountDown.js","views/MobTimer.js","views/ScrumEstimationCard.js","App.js","serviceWorker.js","index.js"],"names":["MasterLayout","children","fluid","ErrorPage","CountDown","props","start","state","timer","duration","undefined","setInterval","setState","subtract","onStart","stop","hours","minutes","seconds","clearInterval","setTimeout","moment","onEnd","handleKeyPress","componentWillReceiveProps","nextProps","auto","startBtnClass","this","isRunning","_","padStart","className","title","onClick","icon","faArrowCircleRight","size","Component","defaultProps","MobTimeSetting","label","value","range","min","max","onSlide","htmlFor","id","step","connect","Number","DragHandle","SortableHandle","faBars","SortableListGroupContainer","SortableContainer","SortableListItem","SortableElement","member","onDelete","disabled","faFrog","theme","faTrash","MobTimer","onSubmitNewMember","e","preventDefault","members","name","enabled_rest_time","indexOf","toastr","error","names","pop","onRemoveMember","idx","splice","onRandomOrder","sub","shuffle","onSortEnd","oldIndex","newIndex","arrayMove","onToggleTooltip","target","toolTipState","onToggleRestTime","onPlayerStartTurn","current_player_index","length","working","onPlayerEndTurn","interval","md","lg","checked","onChange","faRandom","open","tt_shuffle","toggle","axis","useDragHandle","position","map","index","key","onSubmit","required","autoComplete","filter","item","DEFAULT_OPTIONS","points","members_option","options","positionClass","progressBar","timeOut","default_options","number_of_players","darkMode","ScrumEstimationCard","playNewRound","histories","selected_point","isReady","isValid","push","Array","fill","play","valid_points","p","selected_idxs","setDefault","Cookies","set","success","openSetting","settingNumber","calAvg","total","sum","Math","round","componentDidMount","document","getJSON","openInfo","keyBoardClass","join","startBtnTheme","pointBtnTheme","adjSize","xs","faCog","form","sm","style","fontSize","o","faInfoCircle","height","squared","block","border","onTouchEnd","reverse","h","i","App","exact","path","to","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"kPAWeA,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACnB,kBAAC,IAAD,CAAWC,OAAK,GACbD,ICQUE,EAVG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,sD,mKCCFC,E,YACJ,WAAYC,GAAQ,IAAD,uBACjB,4CAAMA,KASRC,MAAQ,WAAO,IAAD,EACc,EAAKC,MAAzBC,EADM,EACNA,MAAOC,EADD,EACCA,cACCC,IAAVF,IACFA,EAAQG,aAAY,WAClB,EAAKC,SAAS,CAAEH,SAAUA,EAASI,SAAS,EAAG,cAC9C,KACH,EAAKD,SAAS,CAAEJ,UAChB,EAAKH,MAAMS,YAjBI,EAqBnBC,KAAO,WAAO,IACNP,EAAU,EAAKD,MAAfC,MADK,EAEyB,EAAKH,MAAjCW,EAFG,EAEHA,MAAOC,EAFJ,EAEIA,QAASC,EAFb,EAEaA,aACVR,IAAVF,IACFW,cAAcX,GACdY,YAAW,WACT,EAAKR,SAAS,CACZJ,WAAOE,EACPD,SAAUY,IAAOZ,SAAP,YAAqBO,EAArB,YAA8BC,EAA9B,YAAyCC,EAAzC,QAEZ,EAAKb,MAAMiB,UACV,OAhCY,EAqCnBC,eAAiB,WACf,EAAKjB,SAtCY,EAyCnBkB,0BAA4B,SAACC,GAAe,IAClCT,EAA4BS,EAA5BT,MAAOC,EAAqBQ,EAArBR,QAASC,EAAYO,EAAZP,QACxB,EAAKN,SAAS,CACZH,SAAUY,IAAOZ,SAAP,YAAqBO,EAArB,YAA8BC,EAA9B,YAAyCC,EAAzC,QAGRO,EAAUC,MACZ,EAAKpB,SAhDU,MAEmB,EAAKD,MAAjCW,EAFS,EAETA,MAAOC,EAFE,EAEFA,QAASC,EAFP,EAEOA,QAFP,OAGjB,EAAKX,MAAQ,CACXE,SAAUY,IAAOZ,SAAP,YAAqBO,EAArB,YAA8BC,EAA9B,YAAyCC,EAAzC,MACVV,WAAOE,EACPiB,cAAe,kBANA,E,sEAoDT,IAAD,SACoCC,KAAKrB,MAAxCE,EADD,EACCA,SAAUD,EADX,EACWA,MAAOmB,EADlB,EACkBA,cACnBE,OAAsBnB,IAAVF,EACZU,EAAUY,IAAEC,SAAStB,EAASS,UAAW,EAAG,GAC5CD,EAAUa,IAAEC,SAAStB,EAASQ,UAAW,EAAG,GAC5CD,EAAQc,IAAEC,SAAStB,EAASO,QAAS,EAAG,GAM9C,OAJiB,IAAbP,GACFmB,KAAKb,OAIL,kBAAC,IAAD,CAAKiB,UAAU,eACXH,GACA,kBAAC,WAAD,KACGD,KAAKvB,MAAM4B,MACZ,yBAAKD,UAAU,kBACZhB,EADH,IACWC,EADX,IACqBC,KAItBW,GACD,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAKG,UAAU,oDACb,wBAAIA,UAAS,UAAML,EAAN,yBACXO,QAAS,kBAAM,EAAK5B,UAEpB,kBAAC,IAAD,CAAiB6B,KAAMC,IAAoBC,KAAK,e,GAhFxCC,aAsGxBlC,EAAUmC,aAAe,CACvBvB,MAAO,EACPC,QAAS,GACTC,QAAS,EACTQ,MAAM,GAIOtB,QCvGToC,EAAiB,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,MAAT,gBAAgBC,MAAhB,GAAyBC,EAAzB,KAA8BC,EAA9B,KAAqCC,EAArC,EAAqCA,QAAYzC,EAAjD,0DACrB,kBAAC,IAAD,KACE,2BAAO0C,QAAO,wBAAoBN,IAChC,gCAAUA,EAAV,MACA,8BAAQC,IAEV,kBAAC,IAAD,eACEM,GAAE,wBAAoBP,GACtBT,UAAU,YACViB,KAAM,EACNC,QAAS,EAAC,GAAM,GAChB5C,MAAO,CAACoC,GACRC,MAAO,CAAEC,MAAKC,OACdC,QAAS,mCAAExC,EAAF,iBAAmBwC,EAAQK,OAAO7C,MACvCD,MAKJ+C,EAAaC,aAAe,kBAAM,kBAAC,IAAD,CAAiBrB,UAAU,oBAAoBG,KAAMmB,SAEvFC,EAA6BC,aAAkB,YAAmB,IAAhBvD,EAAe,EAAfA,SACtD,OACE,kBAAC,IAAD,KACGA,MAKDwD,EAAmBC,aAAgB,YAAqC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC5D,OACE,kBAAC,IAAD,CAAe7B,UAAU,kEACvB,6BACe,cAAX2B,GAA0B,kBAACP,EAAD,MACf,cAAXO,GAA0B,kBAAC,IAAD,CAAiB3B,UAAU,OAAOG,KAAM2B,MAClEH,GAES,cAAXA,GACA,kBAAC,IAAD,CAAQI,MAAM,OAAO1B,KAAK,KACxBwB,SAAUA,EACV3B,QAAS,kBAAM0B,EAASD,KACxB,kBAAC,IAAD,CAAiB3B,UAAU,iBAAiBG,KAAM6B,WA+O7CC,E,YAvOb,WAAY5D,GAAQ,IAAD,8BACjB,4CAAMA,KAeR6D,kBAAoB,SAACC,GACnBA,EAAEC,iBADuB,MAEkB,EAAK7D,MAA1C8D,EAFmB,EAEnBA,QAASC,EAFU,EAEVA,KAAMC,EAFI,EAEJA,kBACrB,IAA+B,IAA3BF,EAAQG,QAAQF,GAClBG,IAAOC,MAAM,mCACR,CACL,IAAIC,EAAQ,CAACL,GACTC,IACFF,EAAQO,MACRD,EAAK,sBAAOA,GAAP,CAAc,eAErB,EAAK/D,SAAS,CACZyD,QAAQ,GAAD,mBACFA,GADE,YAEFM,IAELL,KAAM,OAhCO,EAqCnBO,eAAiB,SAAAlB,GAAW,IACpBU,EAAY,EAAK9D,MAAjB8D,QAEAS,EAAMT,EAAQG,QAAQb,IACf,IAATmB,IACFT,EAAQU,OAAOD,EAAK,GACpB,EAAKlE,SAAS,CAAEyD,cA3CD,EA+CnBW,cAAgB,WAAO,IAAD,EACiB,EAAKzE,MAApC8D,EADc,EACdA,QACFY,EAAM,GAFU,EACLV,oBAGbU,EAAG,sBAAOA,GAAP,CAAYZ,EAAQO,SAGzBP,EAAO,sBAAOvC,IAAEoD,QAAQb,IAAjB,YAA8BY,IACrC,EAAKrE,SAAS,CAAEyD,aAvDC,EA0DnBc,UAAY,YAA6B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACjBhB,EAAY,EAAK9D,MAAjB8D,QAENA,EAAUiB,IAAUjB,EAASe,EAAUC,GACvC,EAAKzE,SAAS,CAAEyD,aA9DC,EAiEnBkB,gBAAkB,SAACC,GACjB,IAAMC,EAAe,GACrBA,EAAa,MAAD,OAAOD,KAAa,EAAKjF,MAAL,aAAiBiF,IACjD,EAAK5E,SAAL,eAAmB,EAAKL,MAAxB,GAAkCkF,KApEjB,EAuEnBC,iBAAmB,WAAO,IAAD,EACc,EAAKnF,MAApCgE,EADiB,EACjBA,kBAAmBF,EADF,EACEA,QAErBE,EACFF,EAAQO,MAERP,EAAO,sBAAOA,GAAP,CAAgB,cAGzB,EAAKzD,SAAS,CAAE2D,mBAAoBA,EAAmBF,aAhFtC,EAmFnBsB,kBAAoB,WAAO,IAAD,EACgB,EAAKpF,MAAvCqF,EADkB,EAClBA,qBACNA,GAAwBA,EAAuB,IAFvB,EACIvB,QACiCwB,OAAS,GAEtE,EAAKjF,SAAS,CACZgF,uBACAE,SAAS,KAzFM,EA6FnBC,gBAAkB,aA3FhB,EAAKxF,MAAQ,CACX8D,QAAS,GACT2B,SAAU,CACRhF,MAAO,EACPC,QAAS,GACTC,QAAS,GAEXoD,KAAM,GACNC,mBAAmB,EACnBqB,sBAAuB,EACvBE,SAAS,GAZM,E,sEAiGT,IAAD,SAMHlE,KAAKrB,MAJPyF,EAFK,EAELA,SAAU3B,EAFL,EAEKA,QAASC,EAFd,EAEcA,KACnBsB,EAHK,EAGLA,qBACArB,EAJK,EAILA,kBACAuB,EALK,EAKLA,QAGF,OACE,kBAAC,IAAD,CAAW5F,OAAK,GACd,kBAAC,IAAD,CAAK8B,UAAU,UACb,kBAAC,IAAD,CAAKiE,GAAG,IAAIC,GAAG,IAAIlE,UAAU,OAC3B,6BACE,wBAAIA,UAAU,OAAd,OACA,wBAAIA,UAAU,OAAd,cACA,wBAAIA,UAAU,OAAd,UAEF,6BACA,6CAGA,kBAAC,EAAD,CACES,MAAM,QACNoB,SAAUiC,EACVpD,MAAOsD,EAAShF,MAChB2B,MAAO,CAAC,EAAG,IACXG,QAAS,SAAA9B,GAAK,OAAI,EAAKJ,SACrB,CACEoF,SAAS,eAAMA,EAAP,GAAoB,CAAEhF,eAIpC,kBAAC,EAAD,CACEyB,MAAM,UACNoB,SAAUiC,EACVpD,MAAOsD,EAAS/E,QAChB0B,MAAO,CAAC,EAAG,IACXG,QAAS,SAAA7B,GAAO,OAAI,EAAKL,SACvB,CACEoF,SAAS,eAAMA,EAAP,GAAoB,CAAE/E,iBAIpC,kBAAC,EAAD,CACEwB,MAAM,UACNoB,SAAUiC,EACVpD,MAAOsD,EAAS9E,QAChByB,MAAO,CAAC,EAAG,IACXG,QAAS,SAAA5B,GAAO,OAAI,EAAKN,SACvB,CACEoF,SAAS,eAAMA,EAAP,GAAoB,CAAE9E,iBAIpC,6BACA,sCAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEiF,QAAS5B,EACTV,SAAUiC,EACVM,SAAU,kBAAM,EAAKV,qBAHvB,cAQF,6BACA,yBAAK1D,UAAU,qDACb,wBAAIA,UAAU,OAAd,WAGEqC,EAAQwB,OAAS,GACjB,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAQ7C,GAAG,aAAae,MAAM,OAAO1B,KAAK,KAC1CH,QAAS,kBAAM,EAAK8C,kBAClB,kBAAC,IAAD,CAAiBhD,UAAU,iBAAiBG,KAAMkE,OAEpD,kBAAC,IAAD,CACEC,KAAM1E,KAAKrB,MAAMgG,WACjBf,OAAO,cACPgB,OAAQ,kBAAM,EAAKjB,gBAAgB,aAHrC,+BAUN,kBAAChC,EAAD,CAA4BkD,KAAK,IAC/BC,eAAa,EACb7C,SAAUiC,EACVX,UAAW,SAAAwB,GAAQ,OAAI,EAAKxB,UAAUwB,KACpCtC,EAAQuC,KAAI,SAACjD,EAAQkD,GAAT,OACZ,kBAACpD,EAAD,CACEoD,MAAOA,EACPlD,OAAQA,EACRmD,IAAKD,EACLjD,SAAU,SAAAD,GAAM,OAAI,EAAKkB,eAAelB,UAI9C,kBAAC,IAAD,CAAMoD,SAAU,SAAA5C,GAAC,OAAI,EAAKD,kBAAkBC,KAC1C,kBAAC,IAAD,CACE6C,UAAQ,EACRhF,UAAU,6CACViF,aAAa,MACbvE,MAAO4B,EACP8B,SAAU,gBAAoB9B,EAApB,EAAGkB,OAAU9C,MAAb,OAAiC,EAAK9B,SAAS,CAAE0D,cAI/DxC,IAAEoF,OAAO7C,GAAS,SAAA8C,GAAI,MAAa,cAATA,KAAsBtB,OAAS,GACzD,kBAAC,EAAD,CACE5D,MAAOoC,EAAQuB,GACf5E,MAAOgF,EAAShF,MAChBC,QAAS+E,EAAS/E,QAClBC,QAAS8E,EAAS9E,QAClBJ,QAAS,kBAAM,EAAK6E,qBACpBrE,MAAO,kBAAM,EAAKyE,qBAGpBjE,IAAEoF,OAAO7C,GAAS,SAAA8C,GAAI,MAAa,cAATA,KAAsBtB,OAAS,GACzD,kBAAC,IAAD,CAAK7D,UAAU,gEACb,wBAAIA,UAAU,aAAd,2BACA,wBAAIA,UAAU,aAAd,iCACA,wBAAIA,UAAU,aAAd,qC,GA/NSM,a,iBChDjB8E,EAAkB,sBAElBC,EAAS,CACb,EAAG,EAAG,EAAG,EAAG,EACZ,EAAG,GAAI,GAAI,GACX,GAAI,GAAI,KAGJC,EAAiB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAEtC7C,IAAO8C,QAAU,CACfC,cAAe,uBACfC,aAAa,EACbC,QAAS,KAGX,IAAMC,EAAkB,CACtBC,kBAAmB,EACnBC,UAAU,GA6OGC,E,YAzOb,WAAYzH,GAAQ,IAAD,8BACjB,4CAAMA,KAcR0H,aAAe,WAAO,IAAD,EACmC,EAAKxH,MAArDyH,EADa,EACbA,UAAWC,EADE,EACFA,eAAgBC,EADd,EACcA,QADd,EACuBC,SAC3BD,GACbF,EAAUI,KAAKH,GAEjB,EAAKrH,SAAS,CACZqH,eAAgBI,MAAMlF,OAAO,EAAK5C,MAAMqH,oBAAoBU,UAAK5H,GACjEyH,SAAS,EACTD,SAAS,EACTF,eAxBe,EA4BnBO,KAAO,SAAC7F,GAAW,IACXuF,EAAmB,EAAK1H,MAAxB0H,eACAnD,EAAMmD,EAAezD,aAAQ9D,GACnC,IAAa,IAAToE,EAAY,CACdmD,EAAenD,GAAOpC,EACtB,IAAMwF,GAAiD,IAAvCD,EAAezD,aAAQ9D,GACjC8H,EAAe1G,IAAEoF,OAAOe,GAAgB,SAAAQ,GAAC,OAAU,MAANA,QAAmB/H,IAAN+H,KAC1DC,EAAgBF,EAAa5B,KAAI,SAAA6B,GAAC,OAAIpB,EAAO7C,QAAQiE,MACrDN,GAAWrG,IAAEe,IAAI6F,IAAkB,IAAM5G,IAAEc,IAAI8F,IAAkB,GAAK,EACxER,IAAYC,GACd1D,IAAOC,MAAM,yBAEf,EAAK9D,SAAS,CAAEqH,iBAAgBO,eAAcN,UAASC,cAxCxC,EA4CnBQ,WAAa,WACX,IAAMpB,EAAU,CACdM,SAAU,EAAKtH,MAAMsH,SACrBD,kBAAmB,EAAKrH,MAAMqH,mBAGhCgB,IAAQC,IAAIzB,EAAiBG,GAC7B9C,IAAOqE,QAAP,8CAAsD,EAAKvI,MAAMqH,oBACjE,EAAKhH,SAAL,eACK2G,EADL,CAEEwB,aAAa,KAEf,EAAKhB,gBAxDY,EA2DnBiB,cAAgB,SAACpB,GACf,EAAKhH,SAAS,CACZgH,oBACAK,eAAgBI,MAAMlF,OAAOyE,IAAoBU,UAAK5H,MA9DvC,EAmEnBuI,OAAS,SAAC5B,GACR,IAAMmB,EAAe1G,IAAEoF,OAAOG,GAAQ,SAAAoB,GAAC,OAAU,MAANA,KACrCS,EAAQpH,IAAEqH,IAAIX,GACpB,OAAOY,KAAKC,MAAMH,EAAQV,EAAa3C,SAAW,GAtEjC,EAyEnByD,kBAAoB,WAClBC,SAAStH,MAAQ,kCACjB,IAAMsF,EAAUqB,IAAQY,QAAQpC,IAAoBO,EACpD,EAAK/G,SAAL,eACK2G,EADL,CAEEU,eAAgBI,MAAMlF,OAAOoE,EAAQK,oBAAoBU,UAAK5H,OA5EhE,EAAKH,MAAQ,CACX8G,SACAO,kBAAmBN,EAAe,GAClCU,UAAW,GACXC,eAAgB,MAACvH,OAAWA,OAAWA,OAAWA,GAClD8H,aAAc,GACdN,SAAS,EACTuB,UAAU,EACVV,aAAa,EACblB,UAAU,GAXK,E,sEAiFT,IAAD,SAOHjG,KAAKrB,MALP8G,EAFK,EAELA,OAAQO,EAFH,EAEGA,kBAAmBI,EAFtB,EAEsBA,UAC3BC,EAHK,EAGLA,eAAgBO,EAHX,EAGWA,aAChBN,EAJK,EAILA,QAASC,EAJJ,EAIIA,QACTsB,EALK,EAKLA,SAAUV,EALL,EAKKA,YACVlB,EANK,EAMLA,SAGI6B,EAAgB,CACpB,mDACA,OACA,cAHoB,OAIjB,CACD7B,EAAW,UAAY,eAEzB8B,KAAK,KACDC,EAAgB/B,EAAW,OAAS,UACpCgC,EAAgBhC,EAAW,YAAc,QAC3CiC,EAAUlC,EAAoB,EAAI,EAAI,EAI1C,OAHAkC,EAAUlC,EAAoB,IAAM,EAAI,EAAIkC,EAC5CA,EAAUlC,EAAoB,IAAM,EAAI,EAAIkC,EAC5CA,EAAUlC,EAAoB,IAAM,EAAI,EAAIkC,EAE1C,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAG,KAAK/H,UAAU,aACrB,wBAAIA,UAAY6F,EAAW,YAAc,gBAAzC,qBAEF,kBAAC,IAAD,CAAKkC,GAAG,IAAI/H,UAAU,0DACpB,kBAAC,IAAD,CAAiBG,KAAM6H,IAAOhI,UAAU,OAAOE,QAAS,kBAAM,EAAKtB,SAAS,CAAEmI,aAAa,OAC3F,kBAAC,IAAD,CAAO/G,UAAU,wBAAwBsE,KAAMyC,EAAavC,OAAQ,kBAAM,EAAK5F,SAAS,CAAEmI,aAAcA,MACtG,kBAAC,IAAD,iBACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKkB,MAAI,GACP,kBAAC,IAAD,CAAKC,GAAG,IAAIlI,UAAU,QACpB,2BAAOe,QAAQ,mBAAf,qBACA,kBAAC,IAAD,CACEL,MAAOkF,EACPxB,SAAU,gBAAoBwB,EAApB,EAAGpC,OAAU9C,MAAb,OAA6C,EAAKsG,cAAcpB,IAC1EuC,MAAO,CAAEC,SAAU,SAClB9C,EAAeV,KAAI,SAACyD,EAAGvD,GAAJ,OAClB,4BAAQA,IAAKA,EAAKpE,MAAO2H,GAAIA,QAInC,kBAAC,IAAD,CAAKH,GAAG,IAAIlI,UAAU,QACpB,kBAAC,IAAD,CACEwE,QAAM,EACNL,QAAS0B,EACTzB,SAAU,kBAAM,EAAKxF,SAAS,CAAEiH,UAAWA,MAH7C,sBAQJ,kBAAC,IAAD,CAAa7F,UAAU,QACrB,kBAAC,IAAD,CAAQE,QAAS,kBAAM,EAAKyG,eAA5B,WAIN,kBAAC,IAAD,CAAiBxG,KAAMmI,IAActI,UAAU,OAAOE,QAAS,kBAAM,EAAKtB,SAAS,CAAE6I,UAAU,OAC/F,kBAAC,IAAD,CAAOzH,UAAU,wBAAwBsE,KAAMmD,EAAUjD,OAAQ,kBAAM,EAAK5F,SAAS,CAAE6I,UAAWA,MAChG,kBAAC,IAAD,oBACA,kBAAC,IAAD,KACE,8BACE,sCADF,kDAGA,6BACA,8BACE,sCADF,oCAGA,6BACA,8BACE,sCADF,kEAGA,6BACA,8BACE,sCADF,4DAOR,kBAAC,IAAD,MAKE7B,GACA,kBAAC,IAAD,CAAK5F,UAAU,oDACVkG,GAAWC,IAAYF,EAAerB,KAAI,SAAC6B,EAAG3D,GAAJ,OAC3C,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAKgC,IAAKhC,EACR9C,UAAU,aACV+H,GAAID,EAASK,MAAO,CAAEI,OAAQ,SAE9B,kBAAC,IAAD,CACExG,MAASoE,IAAWD,GAAYO,IAAM3G,IAAEc,IAAI4F,IAAiBC,IAAM3G,IAAEe,IAAI2F,GAA2BqB,EAAV,SAC1FW,SAAO,EAACC,OAAK,EAACzI,UAAU,qBACxBmI,MAAO,CAAEC,SAAU,aACb1J,IAAN+H,EAAkB,IAAY,MAANA,EAAY,IAAMA,QAIjDP,GAAWC,GACV,kBAAC,IAAD,CAAKnG,UAAU,uDAAuDmI,MAAO,CAAEI,OAAQ,SACnF,wBAAIvI,UAAU,iCACXJ,KAAKqH,OAAOhB,MAMzB,kBAAC,IAAD,CAAKjG,UAAU,QACXqF,EAAOT,KAAI,SAAC6B,EAAG3D,GAAJ,OACX,kBAAC,IAAD,CAAKgC,IAAKhC,EAAKiF,GAAI,EACjBI,MAAO,CAAEI,OAAQ,OAAQG,OAAQ,kBACjC1I,UAAW0H,EACXiB,WAAY,kBAAM,EAAKpC,KAAKE,KAE5B,0BAAMzG,UAAU,SAASmI,MAAO,CAAEC,SAAU,QAAgB,MAAN3B,EAAY,IAAMA,QAI9E,kBAAC,IAAD,CAAKzG,UAAU,QACb,kBAAC,IAAD,CAAKA,UAAU,QACb,kBAAC,IAAD,CAAQ+B,MAAO6F,EAAeY,SAAO,EAACC,OAAK,EAACpI,KAAK,KAAKH,QAAS,kBAAM,EAAK6F,iBAA1E,gBAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK/F,UAAU,QACb,kBAAC,IAAD,KACGgG,EAAU4C,UAAUhE,KAAI,SAACiE,EAAG/F,GAAJ,OACvB,kBAAC,IAAD,CAAe9C,UAAU,SAAS8E,IAAKhC,GACrC,kBAAC,IAAD,CAAK9C,UAAU,SACb6I,EAAEjE,KAAI,SAAC6B,EAAGqC,GAAJ,OACN,kBAAC,IAAD,CAAK9I,UAAU,gCAAgC8E,IAAKgE,GAAU,MAANrC,EAAY,IAAMA,MAE5E,kBAAC,IAAD,CAAKzG,UAAU,8CACb,gCAAS,EAAKiH,OAAO4B,kB,GA7NPvI,aCMnByI,MAvBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAC,IAAD,CAAUC,GAAG,UAEf,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,QAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,oBAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,MACV,kBAAC,EAAD,WCxBNE,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3L,QACfqL,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAAhI,GACL4H,QAAQ5H,MAAM,4CAA6CA,MC1FjEiI,IAASC,OAAO,kBAAC,EAAD,MAASrD,SAASsD,eAAe,SDgB1C,SAAkBlB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,iBAAwB1B,OAAOC,SAAS0B,MACpDC,SAAW5B,OAAOC,SAAS2B,OAIvC,OAGF5B,OAAO6B,iBAAiB,QAAQ,WAC9B,IAAMxB,EAAK,UAAMqB,iBAAN,sBAEP5B,IAgEV,SAAiCO,EAAOC,GAEtCwB,MAAMzB,GACHK,MAAK,SAAAqB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAY7I,QAAQ,cAG5CoH,UAAUC,cAAc4B,MAAM1B,MAAK,SAAAC,GACjCA,EAAa0B,aAAa3B,MAAK,WAC7BV,OAAOC,SAASqC,eAKpBlC,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEArFAqB,CAAwBlC,EAAOC,GAI/BC,UAAUC,cAAc4B,MAAM1B,MAAK,WACjCO,QAAQC,IACN,iHAMJd,EAAgBC,EAAOC,OCvC/BE,I","file":"static/js/main.baa04d22.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Container\n} from 'shards-react';\n\nconst MasterLayout = ({ children }) => (\n  <Container fluid>\n    {children}\n  </Container>\n)\n\nexport default MasterLayout;\n","import React from 'react';\nimport { \n  Container, Row, Col\n} from 'shards-react';\n\nconst ErrorPage = () => (\n  <Container>\n    <Row>\n      <Col>\n        <h1>404 PAGE NOT FOUND</h1>\n      </Col>\n    </Row>\n  </Container>\n)\n\nexport default ErrorPage;","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { \n  Col, Row\n} from 'shards-react';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowCircleRight } from '@fortawesome/free-solid-svg-icons';\n\nclass CountDown extends Component {\n  constructor(props) {\n    super(props)\n    const { hours, minutes, seconds } = this.props;\n    this.state = {\n      duration: moment.duration(`PT${hours}H${minutes}M${seconds}S`),\n      timer: undefined,\n      startBtnClass: 'text-secondary',\n    }\n  }\n\n  start = () => {\n    let { timer, duration } = this.state;\n    if (timer === undefined) {\n      timer = setInterval(() => {\n        this.setState({ duration: duration.subtract(1, 'second') })\n      }, 1000);\n      this.setState({ timer });\n      this.props.onStart();\n    }\n  }\n\n  stop = () => {\n    let { timer } = this.state;\n    const { hours, minutes, seconds } = this.props;\n    if (timer !== undefined) {\n      clearInterval(timer);\n      setTimeout(() => {\n        this.setState({\n          timer: undefined,\n          duration: moment.duration(`PT${hours}H${minutes}M${seconds}S`),\n        });\n        this.props.onEnd();\n      }, 1000);\n      \n    }\n  }\n\n  handleKeyPress = () => {\n    this.start();\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    const { hours, minutes, seconds } = nextProps;\n    this.setState({\n      duration: moment.duration(`PT${hours}H${minutes}M${seconds}S`),\n    })\n\n    if (nextProps.auto) {\n      this.start();\n    }\n  }\n\n  render() {\n    const { duration, timer, startBtnClass } = this.state;\n    const isRunning = timer !== undefined;\n    const seconds = _.padStart(duration.seconds(), 2, 0);\n    const minutes = _.padStart(duration.minutes(), 2, 0);\n    const hours = _.padStart(duration.hours(), 2, 0);\n    \n    if (duration === 0) {\n      this.stop();\n    }\n\n    return (\n      <Col className=\"text-center\">\n        { isRunning &&\n          <Fragment>\n            {this.props.title}\n            <div className=\"d-inline-block\">\n              {hours}:{minutes}:{seconds}\n            </div>\n          </Fragment>\n        }\n        { !isRunning && \n          <Fragment>\n            <Row className=\"vh-100 justify-content-center align-items-center\">\n              <h1 className={ `${startBtnClass} countdown-start-icon` } \n                onClick={() => this.start()}\n              >\n                <FontAwesomeIcon icon={faArrowCircleRight} size=\"3x\" />\n              </h1>\n            </Row>\n          </Fragment>\n        }\n      </Col>\n    )\n  }\n}\n\nCountDown.propTypes = {\n  hours: PropTypes.number,\n  minutes: PropTypes.number,\n  seconds: PropTypes.number,\n  autoStart: PropTypes.bool,\n  onStart: PropTypes.func,\n  onStop: PropTypes.func,\n  onContinue: PropTypes.func,\n  onEnd: PropTypes.func,\n  title: PropTypes.string,\n}\n\nCountDown.defaultProps = {\n  hours: 0,\n  minutes: 15,\n  seconds: 0,\n  auto: false\n};\n\n\nexport default CountDown;","import React, { Component, Fragment } from 'react';\nimport { \n  Container, Row, Col,\n  Form, FormGroup, FormInput, FormCheckbox,\n  Slider, Button,\n  ListGroup, ListGroupItem,\n  Tooltip,\n} from 'shards-react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faRandom, faBars, faFrog } from '@fortawesome/free-solid-svg-icons';\nimport toastr from \"toastr\";\nimport _ from \"lodash\";\nimport { SortableContainer, SortableElement, SortableHandle } from \"react-sortable-hoc\";\nimport arrayMove from \"array-move\";\n\nimport CountDown from '../components/timer/CountDown';\n\nconst MobTimeSetting = ({label, value, range: [ min, max ], onSlide, ...props }) => (\n  <FormGroup>\n    <label htmlFor={ `mobTimeSetting${label}` }>\n      <strong>{ label }: </strong>\n      <span>{ value }</span>\n    </label>\n    <Slider\n      id={ `mobTimeSetting${label}` }\n      className=\"mt-2 mb-2\"\n      step={1}\n      connect={[true, false]}\n      start={[value]}\n      range={{ min, max }}\n      onSlide={([start, _end]) => onSlide(Number(start))}\n      {...props}\n    />\n  </FormGroup>\n)\n\nconst DragHandle = SortableHandle(() => <FontAwesomeIcon className=\"mr-2 members-drag\" icon={faBars} />);\n\nconst SortableListGroupContainer = SortableContainer(({ children }) => {\n  return (\n    <ListGroup>\n      {children}\n    </ListGroup>\n  )\n});\n\nconst SortableListItem = SortableElement(({ member, onDelete, disabled }) => {\n  return (\n    <ListGroupItem className=\"members-item d-flex justify-content-between align-items-center\">\n      <div>\n        { member !== 'Rest Time' && <DragHandle /> }\n        { member === 'Rest Time' && <FontAwesomeIcon className=\"mr-2\" icon={faFrog} /> }\n        { member }\n      </div>\n      { member !== 'Rest Time' &&\n        <Button theme=\"link\" size=\"sm\"\n          disabled={disabled}\n          onClick={() => onDelete(member)}>\n          <FontAwesomeIcon className=\"text-secondary\" icon={faTrash}/>\n        </Button>\n      }\n    </ListGroupItem>\n  )\n})\n\nclass MobTimer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      members: [],\n      interval: {\n        hours: 0,\n        minutes: 15,\n        seconds: 0,\n      },\n      name: '',\n      enabled_rest_time: false,\n      current_player_index: -1,\n      working: false,\n    }\n  }\n\n  onSubmitNewMember = (e) => {\n    e.preventDefault();\n    let { members, name, enabled_rest_time } = this.state;\n    if (members.indexOf(name) !== -1) {\n      toastr.error(\"This Name Has Been Taken!!!\")\n    } else {\n      let names = [name];\n      if (enabled_rest_time) {\n        members.pop();\n        names = [...names, 'Rest Time'];\n      }\n      this.setState({\n        members: [\n          ...members,\n          ...names,\n        ],\n        name: '',\n      });\n    }\n  }\n\n  onRemoveMember = member => {\n    let { members } = this.state;\n\n    const idx = members.indexOf(member);\n    if (idx !== -1) {\n      members.splice(idx, 1);\n      this.setState({ members });\n    }\n  }\n\n  onRandomOrder = () => {\n    let { members, enabled_rest_time } = this.state;\n    let sub = [];\n    if (enabled_rest_time) {\n      sub = [...sub, members.pop()];\n    }\n\n    members = [..._.shuffle(members), ...sub];\n    this.setState({ members });\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    let { members } = this.state;\n\n    members = arrayMove(members, oldIndex, newIndex);\n    this.setState({ members });\n  }\n\n  onToggleTooltip = (target) => {\n    const toolTipState = {};\n    toolTipState[`tt_${target}`] = !this.state[`tt_${target}`];\n    this.setState({ ...this.state, ...toolTipState });\n  }\n\n  onToggleRestTime = () => {\n    let { enabled_rest_time, members } = this.state;\n\n    if (enabled_rest_time) {\n      members.pop();\n    } else {\n      members = [...members, 'Rest Time'];\n    }\n\n    this.setState({ enabled_rest_time: !enabled_rest_time, members });\n  }\n\n  onPlayerStartTurn = () => {\n    let { current_player_index, members } = this.state;\n    current_player_index = (current_player_index + 1) % (members.length + 1);\n\n    this.setState({\n      current_player_index,\n      working: true\n    })\n  }\n\n  onPlayerEndTurn = () => {\n\n  }\n\n  render() {\n    const {\n      interval, members, name,\n      current_player_index,\n      enabled_rest_time,\n      working,\n    } = this.state;\n\n    return (\n      <Container fluid>\n        <Row className=\"vh-100\">\n          <Col md=\"4\" lg=\"3\" className=\"p-2\">\n            <div>\n              <h3 className=\"m-0\">Mob</h3>\n              <h3 className=\"m-0\">Programing</h3>\n              <h3 className=\"m-0\">Timer</h3>\n            </div>\n            <hr/>\n            <h4>\n              Interval Time\n            </h4>\n            <MobTimeSetting\n              label=\"Hours\"\n              disabled={working}\n              value={interval.hours}\n              range={[0, 24]}\n              onSlide={hours => this.setState(\n                { \n                  interval: { ...interval, ...{ hours } } \n                }\n              )}\n            />\n            <MobTimeSetting\n              label=\"Minutes\"\n              disabled={working}\n              value={interval.minutes}\n              range={[0, 59]}\n              onSlide={minutes => this.setState(\n                { \n                  interval: { ...interval, ...{ minutes } } \n                }\n              )}\n            />\n            <MobTimeSetting\n              label=\"Seconds\"\n              disabled={working}\n              value={interval.seconds}\n              range={[0, 59]}\n              onSlide={seconds => this.setState(\n                { \n                  interval: { ...interval, ...{ seconds } } \n                }\n              )}\n            />\n            <br/>\n            <h4>\n              Others\n            </h4>\n            <FormGroup>\n              <FormCheckbox\n                checked={enabled_rest_time}\n                disabled={working}\n                onChange={() => this.onToggleRestTime()}\n              >\n                Rest Time\n              </FormCheckbox>\n            </FormGroup>\n            <br/>\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <h4 className=\"m-0\">\n                Members\n              </h4>\n              { members.length > 1 &&\n                <Fragment>\n                  <Button id=\"tt_shuffle\" theme=\"link\" size=\"sm\"\n                  onClick={() => this.onRandomOrder()}>\n                    <FontAwesomeIcon className=\"text-secondary\" icon={faRandom}/>\n                  </Button>\n                  <Tooltip\n                    open={this.state.tt_shuffle}\n                    target=\"#tt_shuffle\"\n                    toggle={() => this.onToggleTooltip('shuffle')}\n                  >\n                    Shuffle Your Team's Order\n                  </Tooltip>\n                </Fragment>\n              }\n            </div>\n            <SortableListGroupContainer axis=\"y\"\n              useDragHandle\n              disabled={working}\n              onSortEnd={position => this.onSortEnd(position)}>\n              { members.map((member, index) => (\n                <SortableListItem \n                  index={index}\n                  member={member}\n                  key={index}\n                  onDelete={member => this.onRemoveMember(member)}\n                />\n              )) }\n            </SortableListGroupContainer>\n            <Form onSubmit={e => this.onSubmitNewMember(e)}>\n              <FormInput\n                required\n                className=\"simplebox mt-4 border-primary text-primary\"\n                autoComplete=\"off\"\n                value={name}\n                onChange={({ target: { value: name } }) => this.setState({ name })}\n              />\n            </Form>\n          </Col>\n          { _.filter(members, item => item !== 'Rest Time').length > 1 && \n            <CountDown\n              title={members[current_player_index]}\n              hours={interval.hours}\n              minutes={interval.minutes}\n              seconds={interval.seconds}\n              onStart={() => this.onPlayerStartTurn()}\n              onEnd={() => this.onPlayerEndTurn()}\n            />\n          }\n          { _.filter(members, item => item !== 'Rest Time').length < 2 && \n            <Col className=\"d-flex flex-column justify-content-center align-items-center\">\n              <h4 className=\"text-info\">To Start Mob Programing</h4>\n              <h4 className=\"text-info\">You Need More Than 1 Members </h4>\n              <h4 className=\"text-info\">Do Not Play Alone!!! Buddy</h4>\n            </Col>\n          }\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default MobTimer;","import React, { Component, Fragment } from 'react';\nimport { \n  Container, Row, Col,\n  Button,\n  ListGroup, ListGroupItem,\n  Modal, ModalBody, ModalHeader, ModalFooter,\n  FormSelect, FormCheckbox\n} from 'shards-react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport Cookies from 'js-cookie';\nimport toastr from 'toastr';\nimport _ from 'lodash';\n\n// import Timer from '../components/timer/Timer';\n\nconst DEFAULT_OPTIONS = 'estimation-settings';\n\nconst points = [\n  0, 1, 2, 3, 5,\n  8, 13, 21, 34,\n  55, 89, 999\n]\n\nconst members_option = [2,3,4,5,6,7,8,9]\n\ntoastr.options = {\n  positionClass: 'toast-top-full-width',\n  progressBar: true,\n  timeOut: 1000\n}\n\nconst default_options = {\n  number_of_players: 4,\n  darkMode: false,\n}\n\nclass ScrumEstimationCard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      points,\n      number_of_players: members_option[2],\n      histories: [],\n      selected_point: [undefined, undefined, undefined, undefined],\n      valid_points: [],\n      isReady: false,\n      openInfo: false,\n      openSetting: false,\n      darkMode: false,\n    }\n  }\n\n  playNewRound = () => {\n    let { histories, selected_point, isReady, isValid } = this.state;\n    if (isValid && isReady) {\n      histories.push(selected_point);\n    }\n    this.setState({\n      selected_point: Array(Number(this.state.number_of_players)).fill(undefined),\n      isValid: false,\n      isReady: false,\n      histories\n    })\n  }\n\n  play = (value) => {\n    let { selected_point } = this.state;\n    const idx = selected_point.indexOf(undefined);\n    if (idx !== -1) {\n      selected_point[idx] = value;\n      const isReady = selected_point.indexOf(undefined) === -1;\n      const valid_points = _.filter(selected_point, p => p !== 999 && p !== undefined);\n      const selected_idxs = valid_points.map(p => points.indexOf(p));\n      const isValid = (_.max(selected_idxs) || 0) - (_.min(selected_idxs) || 0) < 3;\n      if (isReady && !isValid) {\n        toastr.error('Invalid Points Set!!!');\n      }\n      this.setState({ selected_point, valid_points, isReady, isValid });\n    }\n  }\n\n  setDefault = () => {\n    const options = {\n      darkMode: this.state.darkMode,\n      number_of_players: this.state.number_of_players,\n    }\n\n    Cookies.set(DEFAULT_OPTIONS, options);\n    toastr.success(`Number of player's defaut is set to ${this.state.number_of_players}`);\n    this.setState({\n      ...options,\n      openSetting: false,\n    });\n    this.playNewRound();\n  }\n\n  settingNumber = (number_of_players) => {\n    this.setState({\n      number_of_players,\n      selected_point: Array(Number(number_of_players)).fill(undefined),\n    })\n  }\n\n  \n  calAvg = (points) => {\n    const valid_points = _.filter(points, p => p !== 999);\n    const total = _.sum(valid_points);\n    return Math.round(total / valid_points.length) || 0;\n  }\n  \n  componentDidMount = () => {\n    document.title = 'Estimation Card | Awesome Tools';\n    const options = Cookies.getJSON(DEFAULT_OPTIONS) || default_options;\n    this.setState({\n      ...options,\n      selected_point: Array(Number(options.number_of_players)).fill(undefined),\n    })\n  }\n  render() {\n    const { \n      points, number_of_players, histories, \n      selected_point, valid_points, \n      isReady, isValid,\n      openInfo, openSetting,\n      darkMode\n    } = this.state;\n\n    const keyBoardClass = [\n      'd-flex justify-content-center align-items-center',\n      'px-0',\n      'text-white',\n      ...[\n        darkMode ? 'bg-dark' : 'bg-primary'\n      ]\n    ].join(' ');\n    const startBtnTheme = darkMode ? 'dark' : 'primary';\n    const pointBtnTheme = darkMode ? 'secondary' : 'light';\n    let adjSize = number_of_players > 6 ? 3 : 4;\n    adjSize = number_of_players % 2 === 0 ? 6 : adjSize;\n    adjSize = number_of_players % 3 === 0 ? 4 : adjSize;\n    adjSize = number_of_players % 4 === 0 ? 3 : adjSize;\n    return (\n      <Container>\n        <Row>\n          <Col xs=\"10\" className=\"mt-4 px-0\">\n            <h3 className={ darkMode ? 'text-dark' : 'text-primary' }>Estimations Card</h3>\n          </Col>\n          <Col xs=\"2\" className=\"mt-4 px-0 d-flex justify-content-end align-items-start\">\n            <FontAwesomeIcon icon={faCog} className=\"mx-2\" onClick={() => this.setState({ openSetting: true })}/>  \n            <Modal className=\"modal-dialog-centered\" open={openSetting} toggle={() => this.setState({ openSetting: !openSetting })}>\n              <ModalHeader>Settings</ModalHeader>\n              <ModalBody>\n                <Row form>\n                  <Col sm=\"6\" className=\"mb-3\">\n                    <label htmlFor=\"numberOfPlayers\">Number of players</label>\n                    <FormSelect\n                      value={number_of_players}\n                      onChange={({ target: { value: number_of_players }}) => this.settingNumber(number_of_players)}\n                      style={{ fontSize: '16px' }}>\n                      {members_option.map((o, key) => (\n                        <option key={key} value={o}>{o}</option>\n                      ))}\n                    </FormSelect>\n                  </Col>\n                  <Col sm=\"6\" className=\"mb-3\">\n                    <FormCheckbox\n                      toggle\n                      checked={darkMode}\n                      onChange={() => this.setState({ darkMode: !darkMode })}>\n                      Enable Dark Mode\n                    </FormCheckbox>\n                  </Col>\n                </Row>\n                <ModalFooter className=\"px-0\">\n                  <Button onClick={() => this.setDefault()}>Save</Button>\n                </ModalFooter>\n              </ModalBody>\n            </Modal>\n            <FontAwesomeIcon icon={faInfoCircle} className=\"ml-2\" onClick={() => this.setState({ openInfo: true })}/>  \n            <Modal className=\"modal-dialog-centered\" open={openInfo} toggle={() => this.setState({ openInfo: !openInfo })}>\n              <ModalHeader>How To Use!</ModalHeader>\n              <ModalBody>\n                <span>\n                  <strong>1:</strong> Update number of player to fix your team size\n                </span>\n                <br/>\n                <span>\n                  <strong>2:</strong> Press on the point that choosed\n                </span>\n                <br/>\n                <span>\n                  <strong>3:</strong> Average point will display when you  enter all member's point\n                </span>\n                <br/>\n                <span>\n                  <strong>4:</strong> You can start over by click on button at the bottom\n                </span>\n              </ModalBody>\n            </Modal>\n          </Col>\n        </Row>\n        <Row>\n          {/* <Col>\n            <Timer />\n          </Col> */}\n        </Row>\n        { number_of_players && (\n          <Row className=\"mb-3 justify-content-center align-items-center\">\n            {!(isReady && isValid) && selected_point.map((p, idx) => (\n              <Fragment>\n                <Col key={idx}\n                  className=\"p-0 d-flex\"\n                  xs={adjSize} style={{ height: '10vh' }}\n                >\n                  <Button \n                    theme={ !isValid && isReady && (p === _.min(valid_points) || p === _.max(valid_points)) ? 'danger': pointBtnTheme } \n                    squared block className=\"h-100 border-white\"\n                    style={{ fontSize: '2em' }}\n                  >{p === undefined ? '-' : p === 999 ? '?' : p}</Button>\n                </Col>\n              </Fragment>\n            ))}\n            {isReady && isValid && (\n              <Col className=\"p-0 d-flex justify-content-center align-items-center\" style={{ height: '10vh' }}>\n                  <h1 className=\"d-flex display-3 text-success\">\n                    {this.calAvg(selected_point)}\n                  </h1>\n              </Col>\n            )}\n          </Row>\n        )}\n        <Row className=\"mb-3\">\n          { points.map((p, idx) => (\n            <Col key={idx} xs={4} \n              style={{ height: '10vh', border: '1px solid #fff' }}\n              className={keyBoardClass}\n              onTouchEnd={() => this.play(p)}\n            >\n              <span className=\"d-flex\" style={{ fontSize: '3em' }}>{p === 999 ? '?' : p}</span>\n            </Col>\n          )) }\n        </Row>\n        <Row className=\"mb-3\">\n          <Col className=\"px-0\">\n            <Button theme={startBtnTheme} squared block size=\"lg\" onClick={() => this.playNewRound()}>Start Over</Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"px-0\">\n            <ListGroup>\n              {histories.reverse().map((h, idx) => (\n                <ListGroupItem className=\"d-flex\" key={idx}>\n                  <Row className=\"w-100\">\n                  { h.map((p, i) => (\n                    <Col className=\"d-flex justify-content-center\" key={i}>{p === 999 ? '?' : p}</Col>\n                  )) }\n                  <Col className=\"d-flex justify-content-center text-success\">\n                    <strong>{this.calAvg(h)}</strong>\n                  </Col>\n                  </Row>\n                </ListGroupItem>\n              ))}\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default ScrumEstimationCard;","import React from 'react';\nimport {\n  // BrowserRouter as Router,\n  HashRouter as Router,\n  Route,\n  // Link,\n  Switch,\n  Redirect,\n  // useLocation\n} from 'react-router-dom';\n\nimport './assets/index.scss';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nimport \"toastr/build/toastr.min.css\";\n\nimport { MasterLayout } from './components/layouts';\nimport ErrorPage from './views/ErrorPage';\nimport MobTimer from './views/MobTimer';\nimport ScrumEstimationCard from './views/ScrumEstimationCard';\n\nfunction App() {\n  return (\n    <Router>\n      <MasterLayout>\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/mob\" />\n          </Route>\n          <Route exact path=\"/mob\">\n            <MobTimer />\n          </Route>\n          <Route exact path=\"/estimation_card\">\n            <ScrumEstimationCard />\n          </Route>\n          <Route path=\"/*\">\n            <ErrorPage />\n          </Route>\n        </Switch>\n      </MasterLayout>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}